{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","assets/images/usersLogo.jpg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","updateStatus","ProfileInfo","profile","s","descriptionBlock","src","photos","large","Preloader","Post","item","usersLogo","alt","message","likesCount","maxLength10","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","placeholder","component","validate","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserid","history","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.db6bd082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummeryError\":\"FormsControls_formSummeryError__1QrDT\"};","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\n\n\nconst FormControl = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            { hasError && <span>{error}</span> }\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}","export const required = value => {\n    if (value) return undefined;\n\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"ruslanFace\":\"ProfileInfo_ruslanFace__3oLZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n       setStatus(props.status);\n    }, [props.status] );                 /*dependency*/\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || \"---------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input autoFocus={true}\n                       onChange={onStatusChange}\n                       onBlur={deActivateEditMode}\n                       value={status}/>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {                   /* \"!\" - это отрицание, если \"props.profile отсутствует\"*/\n        return <Preloader />                 /* то возвращаем крутилку */\n    }\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large} />\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/usersLogo.bdee3dc9.jpg\";","import React from 'react';\nimport s from './Post.module.css';\nimport usersLogo from '../../../../assets/images/usersLogo.jpg'\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src={usersLogo} alt=\"\"/>\n            {props.message}\n            <div>\n                <span>like</span> {props.likesCount}\n            </div>\n        </div>)\n\n}\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\n\nconst maxLength10 = maxLengthCreator(10);\n\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements =\n        props.posts.map(p => <Post message={p.message}\n                                   likesCount={p.likesCount}/>);\n\n    let newPostElement = React.createRef();\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newPostText\"\n                       placeholder={\"Post message\"}\n                       component={Textarea}\n                       validate={[required, maxLength10]} />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nexport default MyPosts;\n\n\n\n\n\n\n\n/*\nДля классовой компоненты для оптимизации используем:\nshouldComponentUpdate(nextProps, nextState) {\n   return nextProps != this.props || nextState != this.state;\n\nДля функциональной: React.memo()\n}*/","import React from 'react';\nimport {addPostActionCreator,} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile}\n                         status={props.status}\n                         updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;         /*подхватываем данные о других пользователях*/\n        if (!userId) {                                       /*если нет userId, то*/\n            userId = this.props.authorizedUserid;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserid: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer);\n\n"],"sourceRoot":""}